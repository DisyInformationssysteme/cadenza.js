name: Release

on:
  workflow_dispatch:
    inputs:
      cadenza-version:
        type: string
        description: |
          Cadenza Main Version
          (e.g. '10.2'; Required only to create a new *.0 release, e.g. 10.2.0 for Cadenza 10.2. Otherwise the current version is incremented)
    

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
    - name: Validate version input
      if: "${{ github.event.inputs.cadenza-version != '' }}"
      run: |
        if ! [[ '${{ github.event.inputs.cadenza-version }}' =~ ^[0-9]+\.[0-9]+$ ]]; then
          echo "Cadenza Version must be specified in the format x.x (e.g. 10.2). Was '${{ github.event.inputs.cadenza-version }}'." >&2
          exit 1
        fi

    - uses: actions/create-github-app-token@v1
      id: app-token
      with:
        app-id: ${{ vars.DISY_RELEASE_APP_ID }}
        private-key: ${{ secrets.DISY_RELEASE_APP_SECRET }}
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ steps.app-token.outputs.token }}
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version-file: package.json
        cache: 'npm'

    - run: npm ci
    - run: npm test
    - run: npm run build

    # Needed for creating the tag
    - name: Configure Git
      run: |
        git config --global user.email "github-actions[bot]@users.noreply.github.com"
        git config --global user.name "github-actions[bot]"

    - name: Bump package version
      if: "${{ github.event.inputs.cadenza-version == '' }}"
      run: echo "NEW_VERSION=$(npm --no-git-tag-version version patch)" >> $GITHUB_ENV

    - name: Bump package version (Cadenza main version release)
      if: "${{ github.event.inputs.cadenza-version != '' }}"
      run: echo "NEW_VERSION=$(npm --no-git-tag-version version ${{ github.event.inputs.cadenza-version }}.0)" >> $GITHUB_ENV

    - name: Set release tag to 'latest'
      run: echo "RELEASE_TAG=latest" >> $GITHUB_ENV

    # Update changelog unreleased section with new version
    - name: Update changelog
      uses: superfaceai/release-changelog-action@v2
      with:
        path-to-changelog: CHANGELOG.md
        version: ${{ env.NEW_VERSION }}
        operation: release

    - name: Commit and tag changes
      run: |
        git add "package.json"
        git add "CHANGELOG.md"
        git commit -m "chore: release ${{ env.NEW_VERSION }}"
        git tag ${{ env.NEW_VERSION }}

    - name: Push changes
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: git push origin && git push --tags

    - id: get-changelog
      name: Get version changelog
      uses: superfaceai/release-changelog-action@v2
      with:
        path-to-changelog: CHANGELOG.md
        version: ${{ env.NEW_VERSION }}
        operation: read

    - name: Update GitHub release documentation
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ env.NEW_VERSION }}
        body: ${{ steps.get-changelog.outputs.changelog }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Publish npm package
      run: |
        npm config set '//registry.npmjs.org/:_authToken' "${NPM_TOKEN}"
        npm publish --verbose --access=public --tag=${{ env.RELEASE_TAG }}
      env:
        NPM_TOKEN: ${{ secrets.NPMJS_ACCESS_TOKEN }}
